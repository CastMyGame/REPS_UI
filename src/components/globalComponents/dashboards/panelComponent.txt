  {/* STUDENT PANEL */}
  { panelName === "student" &&  <div className="guidance-panel">
  <div> <h1 className="main-panel-title">Student Records</h1></div>
   {data?.map((item: any, index: any) => {
     return <div>Comming Sono</div>
    
     // return (
     //   <div
     //     className="task-card"
     //     onClick={() =>
     //     {setActiveTask(item)
     //       setDisplayStudentModal(true)
     //       setActiveIndex(index)}}
     //     key={index}
     //   >
     //     <div className="tag">
     //       <div className="color-stripe"></div>
     //       <div className="tag-content">
     //         <div className="index"> {index + 1}</div>
     //         <div className="date">
     //           {" "}
     //           {dateCreateFormat(item?.followUpDate) ||
     //             dateCreateFormat(item?.timeCreated)}
     //         </div>
     //       </div>
     //     </div>

     //     <div className="card-body">
     //       <div className="card-body-title">{item.infractionName}</div>
     //       <div className="card-body-description">
     //         {item.notesArray[0].content}
     //       </div>
     //       {categoryBadgeGenerator(item.infractionName)}
     //     </div>
     //     <div className="card-body">
     //       <div className="card-body-title">Created By</div>
     //       <div className="card-body-description">
     //         {item.teacherEmail}
     //       </div>
     //     </div>
     //     <div className="card-actions">
     //       <div className="card-action-title">
     //         {item.guidanceStatus === "CLOSED"
     //           ? "Restore"
     //           : "Mark Complete"}
     //       </div>
     //       <div
     
     //         className="check-box"
     //       ></div>
     //     </div>
     //     <div className="card-actions">
     //       <div className="card-action-title">Follow Up</div>
     //       <div
     //         className="clock-icon"
     //         onClick={() => {
     //           setDisplayPicker((prevState) => !prevState); // Toggle the state
     //           setActiveTask(item.punishmentId);
     //         }}
     //       >
     //         <AccessTimeIcon
     //           sx={{ fontSize: "20px", fontWeight: "bold" }}
     //         />
     //       </div>
     //     </div>
     //     <div className="card-actions">
     //       <div className="card-action-title">Notes</div>
     //       <div
     //         className="clock-icon"
     //         onClick={() => {
     //           setDisplayNotes((prevState) => !prevState); // Toggle the state
     //           setActiveTask(item.punishmentId);
     //         }}
     //       >
     //         <NoteAddIcon
     //           sx={{ fontSize: "20px", fontWeight: "bold" }}
     //         />
     //       </div>
     //     </div>
     //     <div className="card-actions">
     //       <div className="card-action-title">Resources</div>
     //       <div
     //         className="clock-icon"
     //         onClick={() => {
     //           setDisplayResources((prevState) => !prevState); // Toggle the state
     //           setActiveTask(item.punishmentId);
     //         }}
     //       >
     //         <SendIcon sx={{ fontSize: "20px", fontWeight: "bold" }} />
     //       </div>
     //     </div>
     //   </div>
     // );
   })}
 </div>}


   </div>

   
{  displayStudentModal &&   <StudentDetailsModal studentEmail={activeTask.studentEmail}
setDisplayModal={setDisplayStudentModal}
/>}

 {/* NOTES AND DETAILS SECTION */}
 <div className={`secondary-panel ${panelName !== "overview" ? "hide" : ""}`}>
   <h1 className="main-panel-title">Threads</h1>
   {activeIndex != null && activeIndex >= 0 && (
     <div className="details-container">
       <p>{data[activeIndex]?.guidanceTitle}</p>
       <p>{dateCreateFormat(openTask[activeIndex]?.createdDate)}</p>
       <p>{data[activeIndex]?.studentId}</p>
       <p>{data[activeIndex]?.studentEmail}</p>
       <p>{data[activeIndex]?.teacherEmail}</p>
     </div>
   )}



//punishment panel

    {panelName === "punishment" &&  <div className="parent-contact-panel">
           <div> <h1 className="main-panel-title">Parent Contacts</h1></div>
            {data.map((item: any, index: any) => {
      
              return (
                <div
                  className="task-card"
                  onClick={() => setActiveIndex(index)}
                  key={index}
                >
                  <div className="tag">
                    <div className="color-stripe"></div>
                    <div className="tag-content">
                      <div className="index"> {index + 1}</div>
                      <div className="date">
                        {" "}
                        {dateCreateFormat(item?.followUpDate) ||
                          dateCreateFormat(item?.timeCreated)}
                      </div>
                    </div>
                  </div>

                  <div className="card-body">
                    <div className="card-body-title">{item.infractionName}</div>
                    <div className="card-body-description">
                      {item.infractionDescription}
                    </div>
                  </div>
                  <div className="card-body">
                    <div className="card-body-title">Created By</div>
                    <div className="card-body-description">
                      {item.teacherEmail}
                    </div>
                    <div>{statusBadgeGenerator(item.status)}</div>
                  </div>
                  <div className="action-container">
                  <div className="card-actions">
                    <div className="card-action-title">
                      {item.guidanceStatus === "CLOSED"
                        ? "Restore"
                        : " Complete"}
                    </div>
                 <div
                      onClick={() =>
                        handlePunishmentClose(item.punishmentId)
                      }
                      className={closeIndicator && activeIndex === index ? 'check-box checked-fill ': `check-box`}
                    ></div>
                  </div>
                  <div className="card-actions">
                    <div className="card-action-title">Notes</div>
                    <div
                      className="clock-icon"
                      onClick={() => {
                        setDisplayNotes((prevState) => !prevState); // Toggle the state
                        setActiveTask(item.punishmentId);
                      }}
                    >
                      <NoteAddIcon
                        sx={{ fontSize: "20px", fontWeight: "bold" }}
                      />
                    </div>
                  </div>
                  <div className="card-actions">
                    <div className="card-action-title">Delete</div>
                    <div
                      className="clock-icon"
                      onClick={() => {
                        // setDisplayNotes((prevState) => !prevState); // Toggle the state
                        deleteRecord(item)
                      }}
                    >
                      <DeleteForeverIcon  sx={{ fontSize: "20px", fontWeight: "bold" }} />

                      
                      
                    </div>
                  </div>

                  </div>
                
              
                </div>
              );
            })}
          </div>                  
           } 